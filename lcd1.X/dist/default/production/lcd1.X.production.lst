

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 23 09:00:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 05/05/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F45K50 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _ANSELA	set	3931
    58  0000                     _ANSELD	set	3934
    59  0000                     _LATAbits	set	3977
    60  0000                     _LATD	set	3980
    61  0000                     _LATA	set	3977
    62  0000                     _TRISD	set	3989
    63  0000                     _TRISA	set	3986
    64                           
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	callstack 0
    68  000800  00                 	db	0
    69  000801                     STR_1:
    70                           
    71                           ; BSR set to: 15
    72  000801  20                 	db	32
    73  000802  43                 	db	67	;'C'
    74  000803  75                 	db	117	;'u'
    75  000804  72                 	db	114	;'r'
    76  000805  73                 	db	115	;'s'
    77  000806  6F                 	db	111	;'o'
    78  000807  20                 	db	32
    79  000808  64                 	db	100	;'d'
    80  000809  65                 	db	101	;'e'
    81  00080A  20                 	db	32
    82  00080B  4D                 	db	77	;'M'
    83  00080C  26                 	db	38
    84  00080D  4D                 	db	77	;'M'
    85  00080E  20                 	db	32
    86  00080F  00                 	db	0
    87  000810                     STR_2:
    88                           
    89                           ; BSR set to: 15
    90  000810  48                 	db	72	;'H'
    91  000811  65                 	db	101	;'e'
    92  000812  6C                 	db	108	;'l'
    93  000813  6C                 	db	108	;'l'
    94  000814  6F                 	db	111	;'o'
    95  000815  20                 	db	32
    96  000816  57                 	db	87	;'W'
    97  000817  6F                 	db	111	;'o'
    98  000818  72                 	db	114	;'r'
    99  000819  6C                 	db	108	;'l'
   100  00081A  64                 	db	100	;'d'
   101  00081B  00                 	db	0
   102  00081C  00                 	db	0	; dummy byte at the end
   103  0000                     
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107  000B2C                     __pcinit:
   108                           	callstack 0
   109  000B2C                     start_initialization:
   110                           	callstack 0
   111  000B2C                     __initialization:
   112                           	callstack 0
   113                           
   114                           ; Clear objects allocated to COMRAM (40 bytes)
   115  000B2C  EE00  F001         	lfsr	0,__pbssCOMRAM
   116  000B30  0E28               	movlw	40
   117  000B32                     clear_0:
   118  000B32  6AEE               	clrf	postinc0,c
   119  000B34  06E8               	decf	wreg,f,c
   120  000B36  E1FD               	bnz	clear_0
   121  000B38                     end_of_initialization:
   122                           	callstack 0
   123  000B38                     __end_of__initialization:
   124                           	callstack 0
   125  000B38  0E00               	movlw	low (__Lsmallconst shr (0+16))
   126  000B3A  6EF8               	movwf	tblptru,c
   127  000B3C  0E08               	movlw	high __Lsmallconst
   128  000B3E  6EF7               	movwf	tblptrh,c
   129  000B40  0100               	movlb	0
   130  000B42  EF31  F005         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	bssCOMRAM
   133  000001                     __pbssCOMRAM:
   134                           	callstack 0
   135  000001                     	ds	32
   136  000021                     _nout:
   137                           	callstack 0
   138  000021                     	ds	2
   139  000023                     _width:
   140                           	callstack 0
   141  000023                     	ds	2
   142  000025                     _prec:
   143                           	callstack 0
   144  000025                     	ds	2
   145  000027                     _flags:
   146                           	callstack 0
   147  000027                     	ds	2
   148                           
   149                           	psect	cstackCOMRAM
   150  000029                     __pcstackCOMRAM:
   151                           	callstack 0
   152  000029                     putch@data:
   153                           	callstack 0
   154  000029                     putcm@data:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0x0
   158  000029                     	ds	1
   159  00002A                     putch@Activa:
   160                           	callstack 0
   161  00002A                     putcm@Activa:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x1
   165  00002A                     	ds	1
   166  00002B                     ??_InicializaLCD:
   167  00002B                     fputc@c:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x2
   171  00002B                     	ds	2
   172  00002D                     fputc@fp:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0x4
   176  00002D                     	ds	2
   177  00002F                     ??_fputc:
   178                           
   179                           ; 1 bytes @ 0x6
   180  00002F                     	ds	5
   181  000034                     ?_vfpfcnvrt:
   182                           	callstack 0
   183  000034                     vfpfcnvrt@fp:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0xB
   187  000034                     	ds	2
   188  000036                     vfpfcnvrt@fmt:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0xD
   192  000036                     	ds	2
   193  000038                     vfpfcnvrt@ap:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0xF
   197  000038                     	ds	2
   198  00003A                     ?_vfprintf:
   199                           	callstack 0
   200  00003A                     vfprintf@fp:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x11
   204  00003A                     	ds	2
   205  00003C                     vfprintf@fmt:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x13
   209  00003C                     	ds	2
   210  00003E                     vfprintf@ap:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x15
   214  00003E                     	ds	2
   215  000040                     vfprintf@cfmt:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x17
   219  000040                     	ds	2
   220  000042                     ?_printf:
   221                           	callstack 0
   222  000042                     printf@fmt:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x19
   226  000042                     	ds	2
   227  000044                     printf@ap:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x1B
   231  000044                     	ds	2
   232  000046                     ??_main:
   233                           
   234                           ; 1 bytes @ 0x1D
   235  000046                     	ds	1
   236                           
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 97 in file "lcd01.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   256 ;;      Params:         0       0       0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0       0       0
   258 ;;      Temps:          1       0       0       0       0       0       0       0       0
   259 ;;      Totals:         1       0       0       0       0       0       0       0       0
   260 ;;Total ram usage:        1 bytes
   261 ;; Hardware stack levels required when called: 5
   262 ;; This function calls:
   263 ;;		_Configuracion
   264 ;;		_InicializaLCD
   265 ;;		_printf
   266 ;;		_putcm
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273  000A62                     __ptext0:
   274                           	callstack 0
   275  000A62                     _main:
   276                           	callstack 26
   277  000A62                     
   278                           ;lcd01.c: 99:     Configuracion();
   279  000A62  ECA3  F005         	call	_Configuracion	;wreg free
   280  000A66                     
   281                           ;lcd01.c: 101:     InicializaLCD();
   282  000A66  ECCF  F004         	call	_InicializaLCD	;wreg free
   283  000A6A                     
   284                           ;lcd01.c: 103:     printf(" Curso de M&M ");
   285  000A6A  0E01               	movlw	low STR_1
   286  000A6C  6E42               	movwf	printf@fmt^0,c
   287  000A6E  0E08               	movlw	high STR_1
   288  000A70  6E43               	movwf	(printf@fmt+1)^0,c
   289  000A72  EC83  F005         	call	_printf	;wreg free
   290  000A76                     
   291                           ;lcd01.c: 104:     putcm(0xC2);
   292  000A76  0EC2               	movlw	194
   293  000A78  EC6B  F005         	call	_putcm
   294  000A7C                     
   295                           ;lcd01.c: 105:     printf("Hello World");
   296  000A7C  0E10               	movlw	low STR_2
   297  000A7E  6E42               	movwf	printf@fmt^0,c
   298  000A80  0E08               	movlw	high STR_2
   299  000A82  6E43               	movwf	(printf@fmt+1)^0,c
   300  000A84  EC83  F005         	call	_printf	;wreg free
   301  000A88                     l980:
   302                           
   303                           ;lcd01.c: 107:         LATAbits.LA0 ^= 1;
   304  000A88  7089               	btg	137,0,c	;volatile
   305  000A8A                     
   306                           ;lcd01.c: 108:         _delay((unsigned long)((500)*(1000000/4000.0)));
   307  000A8A  0EA3               	movlw	163
   308  000A8C  6E46               	movwf	??_main^0,c
   309  000A8E  0E55               	movlw	85
   310  000A90                     u157:
   311  000A90  2EE8               	decfsz	wreg,f,c
   312  000A92  D7FE               	bra	u157
   313  000A94  2E46               	decfsz	??_main^0,f,c
   314  000A96  D7FC               	bra	u157
   315  000A98  F000               	nop	
   316  000A9A  EF44  F005         	goto	l980
   317  000A9E  EF00  F000         	goto	start
   318  000AA2                     __end_of_main:
   319                           	callstack 0
   320                           
   321 ;; *************** function _printf *****************
   322 ;; Defined at:
   323 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
   326 ;;		 -> STR_2(12), STR_1(15), 
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  ap              2   27[COMRAM] PTR void [1]
   329 ;;		 -> ?_printf(2), 
   330 ;;  ret             2    0        int 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  2   25[COMRAM] int 
   333 ;; Registers used:
   334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   340 ;;      Params:         2       0       0       0       0       0       0       0       0
   341 ;;      Locals:         2       0       0       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0       0       0
   343 ;;      Totals:         4       0       0       0       0       0       0       0       0
   344 ;;Total ram usage:        4 bytes
   345 ;; Hardware stack levels used: 1
   346 ;; Hardware stack levels required when called: 4
   347 ;; This function calls:
   348 ;;		_vfprintf
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text1
   355  000B06                     __ptext1:
   356                           	callstack 0
   357  000B06                     _printf:
   358                           	callstack 26
   359  000B06  0E44               	movlw	low (?_printf+2)
   360  000B08  6E44               	movwf	printf@ap^0,c
   361  000B0A  0E00               	movlw	high (?_printf+2)
   362  000B0C  6E45               	movwf	(printf@ap+1)^0,c
   363  000B0E  0E00               	movlw	0
   364  000B10  6E3A               	movwf	vfprintf@fp^0,c
   365  000B12  0E00               	movlw	0
   366  000B14  6E3B               	movwf	(vfprintf@fp+1)^0,c
   367  000B16  C042  F03C         	movff	printf@fmt,vfprintf@fmt
   368  000B1A  C043  F03D         	movff	printf@fmt+1,vfprintf@fmt+1
   369  000B1E  0E44               	movlw	low printf@ap
   370  000B20  6E3E               	movwf	vfprintf@ap^0,c
   371  000B22  0E00               	movlw	high printf@ap
   372  000B24  6E3F               	movwf	(vfprintf@ap+1)^0,c
   373  000B26  EC02  F005         	call	_vfprintf	;wreg free
   374  000B2A  0012               	return		;funcret
   375  000B2C                     __end_of_printf:
   376                           	callstack 0
   377                           
   378 ;; *************** function _vfprintf *****************
   379 ;; Defined at:
   380 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
   383 ;;		 -> NULL(0), 
   384 ;;  fmt             2   19[COMRAM] PTR const unsigned char 
   385 ;;		 -> STR_2(12), STR_1(15), 
   386 ;;  ap              2   21[COMRAM] PTR PTR void 
   387 ;;		 -> printf@ap(2), 
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  cfmt            2   23[COMRAM] PTR unsigned char 
   390 ;;		 -> STR_2(12), STR_1(15), 
   391 ;; Return value:  Size  Location     Type
   392 ;;                  2   17[COMRAM] int 
   393 ;; Registers used:
   394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   400 ;;      Params:         6       0       0       0       0       0       0       0       0
   401 ;;      Locals:         2       0       0       0       0       0       0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0
   403 ;;      Totals:         8       0       0       0       0       0       0       0       0
   404 ;;Total ram usage:        8 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; Hardware stack levels required when called: 3
   407 ;; This function calls:
   408 ;;		_vfpfcnvrt
   409 ;; This function is called by:
   410 ;;		_printf
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text2
   415  000A04                     __ptext2:
   416                           	callstack 0
   417  000A04                     _vfprintf:
   418                           	callstack 26
   419  000A04                     
   420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   421  000A04  C03C  F040         	movff	vfprintf@fmt,vfprintf@cfmt
   422  000A08  C03D  F041         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   423  000A0C                     
   424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   425  000A0C  0E00               	movlw	0
   426  000A0E  6E22               	movwf	(_nout+1)^0,c
   427  000A10  0E00               	movlw	0
   428  000A12  6E21               	movwf	_nout^0,c
   429                           
   430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   431  000A14  EF1E  F005         	goto	l962
   432  000A18                     l960:
   433                           
   434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   435  000A18  C03A  F034         	movff	vfprintf@fp,vfpfcnvrt@fp
   436  000A1C  C03B  F035         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   437  000A20  0E40               	movlw	low vfprintf@cfmt
   438  000A22  6E36               	movwf	vfpfcnvrt@fmt^0,c
   439  000A24  0E00               	movlw	high vfprintf@cfmt
   440  000A26  6E37               	movwf	(vfpfcnvrt@fmt+1)^0,c
   441  000A28  C03E  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
   442  000A2C  C03F  F039         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   443  000A30  EC0F  F004         	call	_vfpfcnvrt	;wreg free
   444  000A34  5034               	movf	?_vfpfcnvrt^0,w,c
   445  000A36  2621               	addwf	_nout^0,f,c
   446  000A38  5035               	movf	(?_vfpfcnvrt+1)^0,w,c
   447  000A3A  2222               	addwfc	(_nout+1)^0,f,c
   448  000A3C                     l962:
   449                           
   450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   451  000A3C  C040  FFF6         	movff	vfprintf@cfmt,tblptrl
   452  000A40  C041  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   453  000A44                     	if	0	;tblptru may be non-zero
   454  000A44                     	endif
   455  000A44                     	if	0	;tblptru may be non-zero
   456  000A44                     	endif
   457  000A44  0008               	tblrd		*
   458  000A46  50F5               	movf	tablat,w,c
   459  000A48  0900               	iorlw	0
   460  000A4A  A4D8               	btfss	status,2,c
   461  000A4C  EF2A  F005         	goto	u141
   462  000A50  EF2C  F005         	goto	u140
   463  000A54                     u141:
   464  000A54  EF0C  F005         	goto	l960
   465  000A58                     u140:
   466  000A58                     
   467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   468  000A58  C021  F03A         	movff	_nout,?_vfprintf
   469  000A5C  C022  F03B         	movff	_nout+1,?_vfprintf+1
   470  000A60  0012               	return		;funcret
   471  000A62                     __end_of_vfprintf:
   472                           	callstack 0
   473                           
   474 ;; *************** function _vfpfcnvrt *****************
   475 ;; Defined at:
   476 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
   479 ;;		 -> NULL(0), 
   480 ;;  fmt             2   13[COMRAM] PTR PTR unsigned char 
   481 ;;		 -> vfprintf@cfmt(2), 
   482 ;;  ap              2   15[COMRAM] PTR PTR void 
   483 ;;		 -> printf@ap(2), 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  llu             8    0        unsigned long long 
   486 ;;  ll              8    0        long long 
   487 ;;  f               4    0        long long 
   488 ;;  vp              3    0        PTR void 
   489 ;;  ct              3    0        unsigned char [3]
   490 ;;  cp              3    0        PTR unsigned char 
   491 ;;  i               2    0        int 
   492 ;;  done            2    0        int 
   493 ;;  c               1    0        unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  2   11[COMRAM] int 
   496 ;; Registers used:
   497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   503 ;;      Params:         6       0       0       0       0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0
   506 ;;      Totals:         6       0       0       0       0       0       0       0       0
   507 ;;Total ram usage:        6 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 2
   510 ;; This function calls:
   511 ;;		_fputc
   512 ;; This function is called by:
   513 ;;		_vfprintf
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text3
   518  00081E                     __ptext3:
   519                           	callstack 0
   520  00081E                     _vfpfcnvrt:
   521                           	callstack 26
   522  00081E                     
   523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   524  00081E  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   525  000822  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   526  000826  CFDE FFF6          	movff	postinc2,tblptrl
   527  00082A  CFDD FFF7          	movff	postdec2,tblptrh
   528  00082E                     	if	0	;tblptru may be non-zero
   529  00082E                     	endif
   530  00082E                     	if	0	;tblptru may be non-zero
   531  00082E                     	endif
   532  00082E  0008               	tblrd		*
   533  000830  50F5               	movf	tablat,w,c
   534  000832  0A25               	xorlw	37
   535  000834  A4D8               	btfss	status,2,c
   536  000836  EF1F  F004         	goto	u121
   537  00083A  EF21  F004         	goto	u120
   538  00083E                     u121:
   539  00083E  EF68  F004         	goto	l948
   540  000842                     u120:
   541  000842                     
   542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   543  000842  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   544  000846  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   545  00084A  2ADE               	incf	postinc2,f,c
   546  00084C  0E00               	movlw	0
   547  00084E  22DD               	addwfc	postdec2,f,c
   548  000850                     
   549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   550  000850  0E00               	movlw	0
   551  000852  6E24               	movwf	(_width+1)^0,c
   552  000854  0E00               	movlw	0
   553  000856  6E23               	movwf	_width^0,c
   554  000858  C023  F027         	movff	_width,_flags
   555  00085C  C024  F028         	movff	_width+1,_flags+1
   556  000860                     
   557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   558  000860  6825               	setf	_prec^0,c
   559  000862  6826               	setf	(_prec+1)^0,c
   560  000864                     
   561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
   562  000864  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   563  000868  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   564  00086C  CFDE FFF6          	movff	postinc2,tblptrl
   565  000870  CFDD FFF7          	movff	postdec2,tblptrh
   566  000874                     	if	0	;tblptru may be non-zero
   567  000874                     	endif
   568  000874                     	if	0	;tblptru may be non-zero
   569  000874                     	endif
   570  000874  0008               	tblrd		*
   571  000876  50F5               	movf	tablat,w,c
   572  000878  0A25               	xorlw	37
   573  00087A  A4D8               	btfss	status,2,c
   574  00087C  EF42  F004         	goto	u131
   575  000880  EF44  F004         	goto	u130
   576  000884                     u131:
   577  000884  EF5B  F004         	goto	l942
   578  000888                     u130:
   579  000888                     
   580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
   581  000888  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   582  00088C  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   583  000890  2ADE               	incf	postinc2,f,c
   584  000892  0E00               	movlw	0
   585  000894  22DD               	addwfc	postdec2,f,c
   586  000896                     
   587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
   588  000896  0E00               	movlw	0
   589  000898  6E2C               	movwf	(fputc@c+1)^0,c
   590  00089A  0E25               	movlw	37
   591  00089C  6E2B               	movwf	fputc@c^0,c
   592  00089E  C034  F02D         	movff	vfpfcnvrt@fp,fputc@fp
   593  0008A2  C035  F02E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   594  0008A6  EC84  F004         	call	_fputc	;wreg free
   595  0008AA                     l938:
   596                           
   597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
   598  0008AA  0E00               	movlw	0
   599  0008AC  6E35               	movwf	(?_vfpfcnvrt+1)^0,c
   600  0008AE  0E01               	movlw	1
   601  0008B0  6E34               	movwf	?_vfpfcnvrt^0,c
   602  0008B2  EF83  F004         	goto	l752
   603  0008B6                     l942:
   604                           
   605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
   606  0008B6  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   607  0008BA  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   608  0008BE  2ADE               	incf	postinc2,f,c
   609  0008C0  0E00               	movlw	0
   610  0008C2  22DD               	addwfc	postdec2,f,c
   611  0008C4                     
   612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
   613  0008C4  0E00               	movlw	0
   614  0008C6  6E35               	movwf	(?_vfpfcnvrt+1)^0,c
   615  0008C8  0E00               	movlw	0
   616  0008CA  6E34               	movwf	?_vfpfcnvrt^0,c
   617  0008CC  EF83  F004         	goto	l752
   618  0008D0                     l948:
   619                           
   620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
   621  0008D0  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   622  0008D4  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   623  0008D8  CFDE FFF6          	movff	postinc2,tblptrl
   624  0008DC  CFDD FFF7          	movff	postdec2,tblptrh
   625  0008E0                     	if	0	;tblptru may be non-zero
   626  0008E0                     	endif
   627  0008E0                     	if	0	;tblptru may be non-zero
   628  0008E0                     	endif
   629  0008E0  0008               	tblrd		*
   630  0008E2  50F5               	movf	tablat,w,c
   631  0008E4  6E2B               	movwf	fputc@c^0,c
   632  0008E6  6A2C               	clrf	(fputc@c+1)^0,c
   633  0008E8  C034  F02D         	movff	vfpfcnvrt@fp,fputc@fp
   634  0008EC  C035  F02E         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   635  0008F0  EC84  F004         	call	_fputc	;wreg free
   636  0008F4                     
   637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
   638  0008F4  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   639  0008F8  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   640  0008FC  2ADE               	incf	postinc2,f,c
   641  0008FE  0E00               	movlw	0
   642  000900  22DD               	addwfc	postdec2,f,c
   643  000902  EF55  F004         	goto	l938
   644  000906                     l752:
   645  000906  0012               	return		;funcret
   646  000908                     __end_of_vfpfcnvrt:
   647                           	callstack 0
   648                           
   649 ;; *************** function _fputc *****************
   650 ;; Defined at:
   651 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  c               2    2[COMRAM] int 
   654 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
   655 ;;		 -> NULL(0), 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  2    2[COMRAM] int 
   660 ;; Registers used:
   661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   667 ;;      Params:         4       0       0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0       0       0
   669 ;;      Temps:          5       0       0       0       0       0       0       0       0
   670 ;;      Totals:         9       0       0       0       0       0       0       0       0
   671 ;;Total ram usage:        9 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 1
   674 ;; This function calls:
   675 ;;		_putch
   676 ;; This function is called by:
   677 ;;		_vfpfcnvrt
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text4
   682  000908                     __ptext4:
   683                           	callstack 0
   684  000908                     _fputc:
   685                           	callstack 26
   686  000908  502D               	movf	fputc@fp^0,w,c
   687  00090A  102E               	iorwf	(fputc@fp+1)^0,w,c
   688  00090C  B4D8               	btfsc	status,2,c
   689  00090E  EF8B  F004         	goto	u81
   690  000912  EF8D  F004         	goto	u80
   691  000916                     u81:
   692  000916  EF96  F004         	goto	l914
   693  00091A                     u80:
   694  00091A  502D               	movf	fputc@fp^0,w,c
   695  00091C  102E               	iorwf	(fputc@fp+1)^0,w,c
   696  00091E  A4D8               	btfss	status,2,c
   697  000920  EF94  F004         	goto	u91
   698  000924  EF96  F004         	goto	u90
   699  000928                     u91:
   700  000928  EF9B  F004         	goto	l916
   701  00092C                     u90:
   702  00092C                     l914:
   703  00092C  502B               	movf	fputc@c^0,w,c
   704  00092E  EC51  F005         	call	_putch
   705  000932  EFCE  F004         	goto	l770
   706  000936                     l916:
   707  000936  EE20 F004          	lfsr	2,4
   708  00093A  502D               	movf	fputc@fp^0,w,c
   709  00093C  26D9               	addwf	fsr2l,f,c
   710  00093E  502E               	movf	(fputc@fp+1)^0,w,c
   711  000940  22DA               	addwfc	fsr2h,f,c
   712  000942  50DE               	movf	postinc2,w,c
   713  000944  10DE               	iorwf	postinc2,w,c
   714  000946  B4D8               	btfsc	status,2,c
   715  000948  EFA8  F004         	goto	u101
   716  00094C  EFAA  F004         	goto	u100
   717  000950                     u101:
   718  000950  EFC5  F004         	goto	l920
   719  000954                     u100:
   720  000954  EE20 F004          	lfsr	2,4
   721  000958  502D               	movf	fputc@fp^0,w,c
   722  00095A  26D9               	addwf	fsr2l,f,c
   723  00095C  502E               	movf	(fputc@fp+1)^0,w,c
   724  00095E  22DA               	addwfc	fsr2h,f,c
   725  000960  EE10 F002          	lfsr	1,2
   726  000964  502D               	movf	fputc@fp^0,w,c
   727  000966  26E1               	addwf	fsr1l,f,c
   728  000968  502E               	movf	(fputc@fp+1)^0,w,c
   729  00096A  22E2               	addwfc	fsr1h,f,c
   730  00096C  50DE               	movf	postinc2,w,c
   731  00096E  5CE6               	subwf	postinc1,w,c
   732  000970  50E6               	movf	postinc1,w,c
   733  000972  0A80               	xorlw	128
   734  000974  6E33               	movwf	(??_fputc+4)^0,c
   735  000976  50DE               	movf	postinc2,w,c
   736  000978  0A80               	xorlw	128
   737  00097A  5833               	subwfb	(??_fputc+4)^0,w,c
   738  00097C  B0D8               	btfsc	status,0,c
   739  00097E  EFC3  F004         	goto	u111
   740  000982  EFC5  F004         	goto	u110
   741  000986                     u111:
   742  000986  EFCE  F004         	goto	l770
   743  00098A                     u110:
   744  00098A                     l920:
   745  00098A  EE20 F002          	lfsr	2,2
   746  00098E  502D               	movf	fputc@fp^0,w,c
   747  000990  26D9               	addwf	fsr2l,f,c
   748  000992  502E               	movf	(fputc@fp+1)^0,w,c
   749  000994  22DA               	addwfc	fsr2h,f,c
   750  000996  2ADE               	incf	postinc2,f,c
   751  000998  0E00               	movlw	0
   752  00099A  22DD               	addwfc	postdec2,f,c
   753  00099C                     l770:
   754  00099C  0012               	return		;funcret
   755  00099E                     __end_of_fputc:
   756                           	callstack 0
   757                           
   758 ;; *************** function _putch *****************
   759 ;; Defined at:
   760 ;;		line 33 in file "lcd01.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  data            1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  data            1    0[COMRAM] unsigned char 
   765 ;;  Activa          1    1[COMRAM] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         0       0       0       0       0       0       0       0       0
   776 ;;      Locals:         2       0       0       0       0       0       0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0
   778 ;;      Totals:         2       0       0       0       0       0       0       0       0
   779 ;;Total ram usage:        2 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_fputc
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text5
   789  000AA2                     __ptext5:
   790                           	callstack 0
   791  000AA2                     _putch:
   792                           	callstack 26
   793                           
   794                           ;incstack = 0
   795                           ;putch@data stored from wreg
   796  000AA2  6E29               	movwf	putch@data^0,c
   797  000AA4                     
   798                           ;lcd01.c: 34:     char Activa;;lcd01.c: 35:     Activa = data & 0xF0;
   799  000AA4  5029               	movf	putch@data^0,w,c
   800  000AA6  0BF0               	andlw	240
   801  000AA8  6E2A               	movwf	putch@Activa^0,c
   802                           
   803                           ;lcd01.c: 36:     LATD = Activa | 0x05;
   804  000AAA  502A               	movf	putch@Activa^0,w,c
   805  000AAC  0905               	iorlw	5
   806  000AAE  6E8C               	movwf	140,c	;volatile
   807  000AB0                     
   808                           ;lcd01.c: 37:     _delay((unsigned long)((10)*(1000000/4000000.0)));
   809  000AB0  D000               	nop2		;2 cycle nop
   810                           
   811                           ;lcd01.c: 38:     LATD = Activa | 0x01;
   812  000AB2  502A               	movf	putch@Activa^0,w,c
   813  000AB4  0901               	iorlw	1
   814  000AB6  6E8C               	movwf	140,c	;volatile
   815  000AB8                     
   816                           ;lcd01.c: 39:     _delay((unsigned long)((1)*(1000000/4000.0)));
   817  000AB8  0E53               	movlw	83
   818  000ABA                     u167:
   819  000ABA  2EE8               	decfsz	wreg,f,c
   820  000ABC  D7FE               	bra	u167
   821  000ABE  F000               	nop	
   822  000AC0                     
   823                           ;lcd01.c: 40:     Activa = data << 4;
   824  000AC0  3829               	swapf	putch@data^0,w,c
   825  000AC2  0BF0               	andlw	240
   826  000AC4  6E2A               	movwf	putch@Activa^0,c
   827  000AC6                     
   828                           ;lcd01.c: 41:     LATD = Activa | 0x05;
   829  000AC6  502A               	movf	putch@Activa^0,w,c
   830  000AC8  0905               	iorlw	5
   831  000ACA  6E8C               	movwf	140,c	;volatile
   832  000ACC                     
   833                           ;lcd01.c: 42:     _delay((unsigned long)((10)*(1000000/4000000.0)));
   834  000ACC  D000               	nop2		;2 cycle nop
   835  000ACE                     
   836                           ;lcd01.c: 43:     LATD = Activa | 0x01;
   837  000ACE  502A               	movf	putch@Activa^0,w,c
   838  000AD0  0901               	iorlw	1
   839  000AD2  6E8C               	movwf	140,c	;volatile
   840  000AD4  0012               	return		;funcret
   841  000AD6                     __end_of_putch:
   842                           	callstack 0
   843                           
   844 ;; *************** function _InicializaLCD *****************
   845 ;; Defined at:
   846 ;;		line 63 in file "lcd01.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         0       0       0       0       0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0
   862 ;;      Temps:          1       0       0       0       0       0       0       0       0
   863 ;;      Totals:         1       0       0       0       0       0       0       0       0
   864 ;;Total ram usage:        1 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 1
   867 ;; This function calls:
   868 ;;		_putcm
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text6
   875  00099E                     __ptext6:
   876                           	callstack 0
   877  00099E                     _InicializaLCD:
   878                           	callstack 29
   879  00099E                     
   880                           ;lcd01.c: 65: _delay((unsigned long)((30)*(1000000/4000.0)));
   881  00099E  0E0A               	movlw	10
   882  0009A0  6E2B               	movwf	??_InicializaLCD^0,c
   883  0009A2  0EBC               	movlw	188
   884  0009A4                     u177:
   885  0009A4  2EE8               	decfsz	wreg,f,c
   886  0009A6  D7FE               	bra	u177
   887  0009A8  2E2B               	decfsz	??_InicializaLCD^0,f,c
   888  0009AA  D7FC               	bra	u177
   889  0009AC  D000               	nop2	
   890  0009AE                     
   891                           ;lcd01.c: 66: putcm(0x02);
   892  0009AE  0E02               	movlw	2
   893  0009B0  EC6B  F005         	call	_putcm
   894  0009B4                     
   895                           ;lcd01.c: 67: _delay((unsigned long)((1)*(1000000/4000.0)));
   896  0009B4  0E53               	movlw	83
   897  0009B6                     u187:
   898  0009B6  2EE8               	decfsz	wreg,f,c
   899  0009B8  D7FE               	bra	u187
   900  0009BA  F000               	nop	
   901                           
   902                           ;lcd01.c: 71: putcm(0x28);
   903  0009BC  0E28               	movlw	40
   904  0009BE  EC6B  F005         	call	_putcm
   905  0009C2                     
   906                           ;lcd01.c: 72: _delay((unsigned long)((1)*(1000000/4000.0)));
   907  0009C2  0E53               	movlw	83
   908  0009C4                     u197:
   909  0009C4  2EE8               	decfsz	wreg,f,c
   910  0009C6  D7FE               	bra	u197
   911  0009C8  F000               	nop	
   912  0009CA                     
   913                           ;lcd01.c: 76: putcm(0x2C);
   914  0009CA  0E2C               	movlw	44
   915  0009CC  EC6B  F005         	call	_putcm
   916                           
   917                           ;lcd01.c: 77: _delay((unsigned long)((1)*(1000000/4000.0)));
   918  0009D0  0E53               	movlw	83
   919  0009D2                     u207:
   920  0009D2  2EE8               	decfsz	wreg,f,c
   921  0009D4  D7FE               	bra	u207
   922  0009D6  F000               	nop	
   923  0009D8                     
   924                           ;lcd01.c: 81: putcm(0x0C);
   925  0009D8  0E0C               	movlw	12
   926  0009DA  EC6B  F005         	call	_putcm
   927  0009DE                     
   928                           ;lcd01.c: 82: _delay((unsigned long)((1)*(1000000/4000.0)));
   929  0009DE  0E53               	movlw	83
   930  0009E0                     u217:
   931  0009E0  2EE8               	decfsz	wreg,f,c
   932  0009E2  D7FE               	bra	u217
   933  0009E4  F000               	nop	
   934                           
   935                           ;lcd01.c: 86: putcm(0x06);
   936  0009E6  0E06               	movlw	6
   937  0009E8  EC6B  F005         	call	_putcm
   938  0009EC                     
   939                           ;lcd01.c: 87: _delay((unsigned long)((1)*(1000000/4000.0)));
   940  0009EC  0E53               	movlw	83
   941  0009EE                     u227:
   942  0009EE  2EE8               	decfsz	wreg,f,c
   943  0009F0  D7FE               	bra	u227
   944  0009F2  F000               	nop	
   945  0009F4                     
   946                           ;lcd01.c: 91: putcm(0x80);
   947  0009F4  0E80               	movlw	128
   948  0009F6  EC6B  F005         	call	_putcm
   949                           
   950                           ;lcd01.c: 92: _delay((unsigned long)((1)*(1000000/4000.0)));
   951  0009FA  0E53               	movlw	83
   952  0009FC                     u237:
   953  0009FC  2EE8               	decfsz	wreg,f,c
   954  0009FE  D7FE               	bra	u237
   955  000A00  F000               	nop	
   956  000A02  0012               	return		;funcret
   957  000A04                     __end_of_InicializaLCD:
   958                           	callstack 0
   959                           
   960 ;; *************** function _putcm *****************
   961 ;; Defined at:
   962 ;;		line 48 in file "lcd01.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  data            1    wreg     unsigned char 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  data            1    0[COMRAM] unsigned char 
   967 ;;  Activa          1    1[COMRAM] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         0       0       0       0       0       0       0       0       0
   978 ;;      Locals:         2       0       0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0
   980 ;;      Totals:         2       0       0       0       0       0       0       0       0
   981 ;;Total ram usage:        2 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_InicializaLCD
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text7
   992  000AD6                     __ptext7:
   993                           	callstack 0
   994  000AD6                     _putcm:
   995                           	callstack 30
   996                           
   997                           ;incstack = 0
   998                           ;putcm@data stored from wreg
   999  000AD6  6E29               	movwf	putcm@data^0,c
  1000  000AD8                     
  1001                           ;lcd01.c: 49:     char Activa;;lcd01.c: 50:     Activa = data & 0xF0;
  1002  000AD8  5029               	movf	putcm@data^0,w,c
  1003  000ADA  0BF0               	andlw	240
  1004  000ADC  6E2A               	movwf	putcm@Activa^0,c
  1005                           
  1006                           ;lcd01.c: 51:     LATD = Activa | 0x04;
  1007  000ADE  502A               	movf	putcm@Activa^0,w,c
  1008  000AE0  0904               	iorlw	4
  1009  000AE2  6E8C               	movwf	140,c	;volatile
  1010  000AE4                     
  1011                           ;lcd01.c: 52:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1012  000AE4  D000               	nop2		;2 cycle nop
  1013  000AE6                     
  1014                           ;lcd01.c: 53:     LATD = Activa;
  1015  000AE6  C02A  FF8C         	movff	putcm@Activa,3980	;volatile
  1016  000AEA                     
  1017                           ;lcd01.c: 54:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1018  000AEA  0E53               	movlw	83
  1019  000AEC                     u247:
  1020  000AEC  2EE8               	decfsz	wreg,f,c
  1021  000AEE  D7FE               	bra	u247
  1022  000AF0  F000               	nop	
  1023  000AF2                     
  1024                           ;lcd01.c: 55:     Activa = data << 4;
  1025  000AF2  3829               	swapf	putcm@data^0,w,c
  1026  000AF4  0BF0               	andlw	240
  1027  000AF6  6E2A               	movwf	putcm@Activa^0,c
  1028  000AF8                     
  1029                           ;lcd01.c: 56:     LATD = Activa | 0x04;
  1030  000AF8  502A               	movf	putcm@Activa^0,w,c
  1031  000AFA  0904               	iorlw	4
  1032  000AFC  6E8C               	movwf	140,c	;volatile
  1033  000AFE                     
  1034                           ;lcd01.c: 57:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1035  000AFE  D000               	nop2		;2 cycle nop
  1036  000B00                     
  1037                           ;lcd01.c: 58:     LATD = Activa;
  1038  000B00  C02A  FF8C         	movff	putcm@Activa,3980	;volatile
  1039  000B04  0012               	return		;funcret
  1040  000B06                     __end_of_putcm:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _Configuracion *****************
  1044 ;; Defined at:
  1045 ;;		line 22 in file "lcd01.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text8
  1073  000B46                     __ptext8:
  1074                           	callstack 0
  1075  000B46                     _Configuracion:
  1076                           	callstack 30
  1077  000B46                     
  1078                           ;lcd01.c: 24: TRISA=0;
  1079  000B46  0E00               	movlw	0
  1080  000B48  6E92               	movwf	146,c	;volatile
  1081                           
  1082                           ;lcd01.c: 25: TRISD=0;
  1083  000B4A  0E00               	movlw	0
  1084  000B4C  6E95               	movwf	149,c	;volatile
  1085                           
  1086                           ;lcd01.c: 26: ANSELD=0;
  1087  000B4E  0E00               	movlw	0
  1088  000B50  010F               	movlb	15	; () banked
  1089  000B52  6F5E               	movwf	94,b	;volatile
  1090                           
  1091                           ;lcd01.c: 27: ANSELA=0;
  1092  000B54  0E00               	movlw	0
  1093  000B56  6F5B               	movwf	91,b	;volatile
  1094                           
  1095                           ;lcd01.c: 28: LATA=0;
  1096  000B58  0E00               	movlw	0
  1097  000B5A  6E89               	movwf	137,c	;volatile
  1098  000B5C                     
  1099                           ; BSR set to: 15
  1100  000B5C  0012               	return		;funcret
  1101  000B5E                     __end_of_Configuracion:
  1102                           	callstack 0
  1103                           
  1104                           	psect	rparam
  1105  0000                     
  1106                           	psect	idloc
  1107                           
  1108                           ;Config register IDLOC0 @ 0x200000
  1109                           ;	unspecified, using default values
  1110  200000                     	org	2097152
  1111  200000  FF                 	db	255
  1112                           
  1113                           ;Config register IDLOC1 @ 0x200001
  1114                           ;	unspecified, using default values
  1115  200001                     	org	2097153
  1116  200001  FF                 	db	255
  1117                           
  1118                           ;Config register IDLOC2 @ 0x200002
  1119                           ;	unspecified, using default values
  1120  200002                     	org	2097154
  1121  200002  FF                 	db	255
  1122                           
  1123                           ;Config register IDLOC3 @ 0x200003
  1124                           ;	unspecified, using default values
  1125  200003                     	org	2097155
  1126  200003  FF                 	db	255
  1127                           
  1128                           ;Config register IDLOC4 @ 0x200004
  1129                           ;	unspecified, using default values
  1130  200004                     	org	2097156
  1131  200004  FF                 	db	255
  1132                           
  1133                           ;Config register IDLOC5 @ 0x200005
  1134                           ;	unspecified, using default values
  1135  200005                     	org	2097157
  1136  200005  FF                 	db	255
  1137                           
  1138                           ;Config register IDLOC6 @ 0x200006
  1139                           ;	unspecified, using default values
  1140  200006                     	org	2097158
  1141  200006  FF                 	db	255
  1142                           
  1143                           ;Config register IDLOC7 @ 0x200007
  1144                           ;	unspecified, using default values
  1145  200007                     	org	2097159
  1146  200007  FF                 	db	255
  1147                           
  1148                           	psect	config
  1149                           
  1150                           ;Config register CONFIG1L @ 0x300000
  1151                           ;	unspecified, using default values
  1152                           ;	PLL Selection
  1153                           ;	PLLSEL = 0x0, unprogrammed default
  1154                           ;	PLL Enable Configuration bit
  1155                           ;	CFGPLLEN = 0x0, unprogrammed default
  1156                           ;	CPU System Clock Postscaler
  1157                           ;	CPUDIV = 0x0, unprogrammed default
  1158                           ;	Low Speed USB mode with 48 MHz system clock
  1159                           ;	LS48MHZ = 0x0, unprogrammed default
  1160  300000                     	org	3145728
  1161  300000  00                 	db	0
  1162                           
  1163                           ;Config register CONFIG1H @ 0x300001
  1164                           ;	Oscillator Selection
  1165                           ;	FOSC = INTOSCIO, Internal oscillator
  1166                           ;	Primary Oscillator Shutdown
  1167                           ;	PCLKEN = 0x1, unprogrammed default
  1168                           ;	Fail-Safe Clock Monitor
  1169                           ;	FCMEN = 0x0, unprogrammed default
  1170                           ;	Internal/External Oscillator Switchover
  1171                           ;	IESO = 0x0, unprogrammed default
  1172  300001                     	org	3145729
  1173  300001  28                 	db	40
  1174                           
  1175                           ;Config register CONFIG2L @ 0x300002
  1176                           ;	unspecified, using default values
  1177                           ;	Power-up Timer Enable
  1178                           ;	nPWRTEN = 0x1, unprogrammed default
  1179                           ;	Brown-out Reset Enable
  1180                           ;	BOREN = 0x3, unprogrammed default
  1181                           ;	Brown-out Reset Voltage
  1182                           ;	BORV = 0x3, unprogrammed default
  1183                           ;	Low-Power Brown-out Reset
  1184                           ;	nLPBOR = 0x1, unprogrammed default
  1185  300002                     	org	3145730
  1186  300002  5F                 	db	95
  1187                           
  1188                           ;Config register CONFIG2H @ 0x300003
  1189                           ;	Watchdog Timer Enable bits
  1190                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1191                           ;	Watchdog Timer Postscaler
  1192                           ;	WDTPS = 0xF, unprogrammed default
  1193  300003                     	org	3145731
  1194  300003  3C                 	db	60
  1195                           
  1196                           ; Padding undefined space
  1197  300004                     	org	3145732
  1198  300004  FF                 	db	255
  1199                           
  1200                           ;Config register CONFIG3H @ 0x300005
  1201                           ;	CCP2 MUX bit
  1202                           ;	CCP2MX = 0x1, unprogrammed default
  1203                           ;	PORTB A/D Enable bit
  1204                           ;	PBADEN = 0x1, unprogrammed default
  1205                           ;	Timer3 Clock Input MUX bit
  1206                           ;	T3CMX = 0x1, unprogrammed default
  1207                           ;	SDO Output MUX bit
  1208                           ;	SDOMX = 0x1, unprogrammed default
  1209                           ;	Master Clear Reset Pin Enable
  1210                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1211  300005                     	org	3145733
  1212  300005  D3                 	db	211
  1213                           
  1214                           ;Config register CONFIG4L @ 0x300006
  1215                           ;	Stack Full/Underflow Reset
  1216                           ;	STVREN = 0x1, unprogrammed default
  1217                           ;	Single-Supply ICSP Enable bit
  1218                           ;	LVP = OFF, Single-Supply ICSP disabled
  1219                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1220                           ;	ICPRT = OFF, ICPORT disabled
  1221                           ;	Extended Instruction Set Enable bit
  1222                           ;	XINST = 0x0, unprogrammed default
  1223                           ;	Background Debugger Enable bit
  1224                           ;	DEBUG = 0x1, unprogrammed default
  1225  300006                     	org	3145734
  1226  300006  81                 	db	129
  1227                           
  1228                           ; Padding undefined space
  1229  300007                     	org	3145735
  1230  300007  FF                 	db	255
  1231                           
  1232                           ;Config register CONFIG5L @ 0x300008
  1233                           ;	unspecified, using default values
  1234                           ;	Block 0 Code Protect
  1235                           ;	CP0 = 0x1, unprogrammed default
  1236                           ;	Block 1 Code Protect
  1237                           ;	CP1 = 0x1, unprogrammed default
  1238                           ;	Block 2 Code Protect
  1239                           ;	CP2 = 0x1, unprogrammed default
  1240                           ;	Block 3 Code Protect
  1241                           ;	CP3 = 0x1, unprogrammed default
  1242  300008                     	org	3145736
  1243  300008  0F                 	db	15
  1244                           
  1245                           ;Config register CONFIG5H @ 0x300009
  1246                           ;	unspecified, using default values
  1247                           ;	Boot Block Code Protect
  1248                           ;	CPB = 0x1, unprogrammed default
  1249                           ;	Data EEPROM Code Protect
  1250                           ;	CPD = 0x1, unprogrammed default
  1251  300009                     	org	3145737
  1252  300009  C0                 	db	192
  1253                           
  1254                           ;Config register CONFIG6L @ 0x30000A
  1255                           ;	unspecified, using default values
  1256                           ;	Block 0 Write Protect
  1257                           ;	WRT0 = 0x1, unprogrammed default
  1258                           ;	Block 1 Write Protect
  1259                           ;	WRT1 = 0x1, unprogrammed default
  1260                           ;	Block 2 Write Protect
  1261                           ;	WRT2 = 0x1, unprogrammed default
  1262                           ;	Block 3 Write Protect
  1263                           ;	WRT3 = 0x1, unprogrammed default
  1264  30000A                     	org	3145738
  1265  30000A  0F                 	db	15
  1266                           
  1267                           ;Config register CONFIG6H @ 0x30000B
  1268                           ;	unspecified, using default values
  1269                           ;	Configuration Registers Write Protect
  1270                           ;	WRTC = 0x1, unprogrammed default
  1271                           ;	Boot Block Write Protect
  1272                           ;	WRTB = 0x1, unprogrammed default
  1273                           ;	Data EEPROM Write Protect
  1274                           ;	WRTD = 0x1, unprogrammed default
  1275  30000B                     	org	3145739
  1276  30000B  E0                 	db	224
  1277                           
  1278                           ;Config register CONFIG7L @ 0x30000C
  1279                           ;	unspecified, using default values
  1280                           ;	Block 0 Table Read Protect
  1281                           ;	EBTR0 = 0x1, unprogrammed default
  1282                           ;	Block 1 Table Read Protect
  1283                           ;	EBTR1 = 0x1, unprogrammed default
  1284                           ;	Block 2 Table Read Protect
  1285                           ;	EBTR2 = 0x1, unprogrammed default
  1286                           ;	Block 3 Table Read Protect
  1287                           ;	EBTR3 = 0x1, unprogrammed default
  1288  30000C                     	org	3145740
  1289  30000C  0F                 	db	15
  1290                           
  1291                           ;Config register CONFIG7H @ 0x30000D
  1292                           ;	unspecified, using default values
  1293                           ;	Boot Block Table Read Protect
  1294                           ;	EBTRB = 0x1, unprogrammed default
  1295  30000D                     	org	3145741
  1296  30000D  40                 	db	64
  1297                           tosu	equ	0xFFF
  1298                           tosh	equ	0xFFE
  1299                           tosl	equ	0xFFD
  1300                           stkptr	equ	0xFFC
  1301                           pclatu	equ	0xFFB
  1302                           pclath	equ	0xFFA
  1303                           pcl	equ	0xFF9
  1304                           tblptru	equ	0xFF8
  1305                           tblptrh	equ	0xFF7
  1306                           tblptrl	equ	0xFF6
  1307                           tablat	equ	0xFF5
  1308                           prodh	equ	0xFF4
  1309                           prodl	equ	0xFF3
  1310                           indf0	equ	0xFEF
  1311                           postinc0	equ	0xFEE
  1312                           postdec0	equ	0xFED
  1313                           preinc0	equ	0xFEC
  1314                           plusw0	equ	0xFEB
  1315                           fsr0h	equ	0xFEA
  1316                           fsr0l	equ	0xFE9
  1317                           wreg	equ	0xFE8
  1318                           indf1	equ	0xFE7
  1319                           postinc1	equ	0xFE6
  1320                           postdec1	equ	0xFE5
  1321                           preinc1	equ	0xFE4
  1322                           plusw1	equ	0xFE3
  1323                           fsr1h	equ	0xFE2
  1324                           fsr1l	equ	0xFE1
  1325                           bsr	equ	0xFE0
  1326                           indf2	equ	0xFDF
  1327                           postinc2	equ	0xFDE
  1328                           postdec2	equ	0xFDD
  1329                           preinc2	equ	0xFDC
  1330                           plusw2	equ	0xFDB
  1331                           fsr2h	equ	0xFDA
  1332                           fsr2l	equ	0xFD9
  1333                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      70
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    S548_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[12]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[12]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[12]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _InicializaLCD->_putcm

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1966
                                             29 COMRAM     1     1      0
                      _Configuracion
                      _InicializaLCD
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1786
                                             25 COMRAM     4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    1582
                                             17 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    34      6    1232
                                             11 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     806
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                2     2      0      90
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        1     1      0      90
                                              2 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _putcm                                                2     2      0      90
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
   _InicializaLCD
     _putcm
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
   _putcm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      46       1       73.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46       6        0.0%
DATA                 0      0      46       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 23 09:00:57 2021

                     l21 0B5C                       l30 0A02                       l24 0AD4  
                     l27 0B04                       u80 091A                       u81 0916  
                     u90 092C                       u91 0928            _InicializaLCD 099E  
                    l910 0908                      l719 0B2A                      l920 098A  
                    l912 091A                      l752 0906                      l850 0AE6  
                    l770 099C                      l914 092C                      l930 0860  
                    l860 0B00                      l852 0AEA                      l916 0936  
                    l932 0864                      l924 081E                      l757 0A58  
                    l870 0B46                      l854 0AF2                      l846 0AD8  
                    l790 0AB8                      l918 0954                      l950 08F4  
                    l934 0888                      l942 08B6                      l926 0842  
                    l758 0A60                      l856 0AF8                      l848 0AE4  
                    l880 09CA                      l872 099E                      l792 0AC0  
                    l944 08C4                      l936 0896                      l928 0850  
                    l960 0A18                      l858 0AFE                      l882 09D8  
                    l874 09AE                      l794 0AC6                      l786 0AA4  
                    l938 08AA                      l962 0A3C                      l970 0A62  
                    l884 09DE                      l876 09B4                      l796 0ACC  
                    l788 0AB0                      l948 08D0                      l956 0A04  
                    l964 0B06                      l980 0A88                      l972 0A66  
                    l886 09EC                      l878 09C2                      l798 0ACE  
                    l958 0A0C                      l966 0B0E                      l982 0A8A  
                    l974 0A6A                      l888 09F4                      l976 0A76  
                    l978 0A7C                      u100 0954                      u101 0950  
                    u110 098A                      u111 0986                      u120 0842  
                    u121 083E                      u130 0888                      u131 0884  
                    u140 0A58                      u141 0A54                      u207 09D2  
                    u217 09E0                      u227 09EE                      u237 09FC  
                    u157 0A90                      u247 0AEC                      u167 0ABA  
                    u177 09A4                      u187 09B6                      u197 09C4  
                    wreg 000FE8                     STR_1 0801                     STR_2 0810  
                   _LATA 000F89                     _LATD 000F8C                     _dbuf 0001  
                   _main 0A62                     _prec 0025                     _nout 0021  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
         ?_InicializaLCD 0029                    ?_main 0029             vfpfcnvrt@fmt 0036  
                  _TRISA 000F92                    _TRISD 000F95                    _flags 0027  
                  _fputc 0908                    _width 0023                    _putch 0AA2  
                  _putcm 0AD6                    tablat 000FF5                    status 000FD8  
        __initialization 0B2C             __end_of_main 0AA2                   ??_main 0046  
          __activetblptr 000001                   ?_fputc 002B                   _ANSELA 000F5B  
                 ?_putch 0029                   _ANSELD 000F5E                   ?_putcm 0029  
           vfprintf@cfmt 0040          ??_InicializaLCD 002B                   clear_0 0B32  
                 isa$std 000001                   _printf 0B06                   fputc@c 002B  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8         __end_of_vfprintf 0A62               __accesstop 0060  
__end_of__initialization 0B38            ___rparam_used 000001           __pcstackCOMRAM 0029  
          __end_of_fputc 099E            __end_of_putch 0AD6            __end_of_putcm 0B06  
                ??_fputc 002F                  ??_putch 0029                  ??_putcm 0029  
  __end_of_Configuracion 0B5E                  ?_printf 0042       __size_of_vfpfcnvrt 00EA  
                __Hparam 0000                  __Lparam 0000                ?_vfprintf 003A  
           __psmallconst 0800                  __pcinit 0B2C                  __ramtop 0800  
                __ptext0 0A62                  __ptext1 0B06                  __ptext2 0A04  
                __ptext3 081E                  __ptext4 0908                  __ptext5 0AA2  
                __ptext6 099E                  __ptext7 0AD6                  __ptext8 0B46  
        __size_of_printf 0026     end_of_initialization 0B38                  fputc@fp 002D  
      __end_of_vfpfcnvrt 0908                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0040  
            vfpfcnvrt@ap 0038              vfpfcnvrt@fp 0034              putch@Activa 002A  
  __end_of_InicializaLCD 0A04           __end_of_printf 0B2C              putcm@Activa 002A  
    start_initialization 0B2C              vfprintf@fmt 003C                 ??_printf 0044  
            __pbssCOMRAM 0001   __size_of_Configuracion 0018        __size_of_vfprintf 005E  
            __smallconst 0800           __size_of_fputc 0096           __size_of_putch 0034  
         __size_of_putcm 0030                 _LATAbits 000F89                _vfpfcnvrt 081E  
          _Configuracion 0B46                 __Hrparam 0000               vfprintf@ap 003E  
               __Lrparam 0000               vfprintf@fp 003A             __Lsmallconst 0800  
             ?_vfpfcnvrt 0034           ?_Configuracion 0029            __size_of_main 0040  
               isa$xinst 000000                 _vfprintf 0A04                printf@fmt 0042  
              putch@data 0029                putcm@data 0029   __size_of_InicializaLCD 0066  
               printf@ap 0044              ??_vfpfcnvrt 003A          ??_Configuracion 0029  
