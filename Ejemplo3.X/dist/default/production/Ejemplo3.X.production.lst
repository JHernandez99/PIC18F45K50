

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 30 08:47:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 05/05/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K50 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ANSELB	set	3932
    51  0000                     _ANSELA	set	3931
    52  0000                     _LATB	set	3978
    53  0000                     _ADRESH	set	4036
    54  0000                     _ADRESL	set	4035
    55  0000                     _ADCON0bits	set	4034
    56  0000                     _ADCON2	set	4032
    57  0000                     _ADCON1	set	4033
    58  0000                     _ADCON0	set	4034
    59  0000                     _TRISB	set	3987
    60  0000                     _TRISA	set	3986
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  007EAA                     __pcinit:
    66                           	callstack 0
    67  007EAA                     start_initialization:
    68                           	callstack 0
    69  007EAA                     __initialization:
    70                           	callstack 0
    71  007EAA                     end_of_initialization:
    72                           	callstack 0
    73  007EAA                     __end_of__initialization:
    74                           	callstack 0
    75  007EAA  0100               	movlb	0
    76  007EAC  EF7E  F03F         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81  000001                     ?_convierte:
    82                           	callstack 0
    83                           
    84                           ; 2 bytes @ 0x0
    85  000001                     	ds	2
    86  000003                     ??_convierte:
    87                           
    88                           ; 1 bytes @ 0x2
    89  000003                     	ds	2
    90  000005                     convierte@resultado:
    91                           	callstack 0
    92                           
    93                           ; 2 bytes @ 0x4
    94  000005                     	ds	2
    95  000007                     ?___awdiv:
    96                           	callstack 0
    97  000007                     ___awdiv@dividend:
    98                           	callstack 0
    99                           
   100                           ; 2 bytes @ 0x6
   101  000007                     	ds	2
   102  000009                     ___awdiv@divisor:
   103                           	callstack 0
   104                           
   105                           ; 2 bytes @ 0x8
   106  000009                     	ds	2
   107  00000B                     ___awdiv@counter:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0xA
   111  00000B                     	ds	1
   112  00000C                     ___awdiv@sign:
   113                           	callstack 0
   114                           
   115                           ; 1 bytes @ 0xB
   116  00000C                     	ds	1
   117  00000D                     ___awdiv@quotient:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0xC
   121  00000D                     	ds	2
   122  00000F                     ??_main:
   123                           
   124                           ; 1 bytes @ 0xE
   125  00000F                     	ds	1
   126                           
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 42 in file "ejemplo3.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2, status,0, cstack
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   146 ;;      Params:         0       0       0       0       0       0       0       0       0
   147 ;;      Locals:         0       0       0       0       0       0       0       0       0
   148 ;;      Temps:          1       0       0       0       0       0       0       0       0
   149 ;;      Totals:         1       0       0       0       0       0       0       0       0
   150 ;;Total ram usage:        1 bytes
   151 ;; Hardware stack levels required when called: 1
   152 ;; This function calls:
   153 ;;		___awdiv
   154 ;;		_configuracion
   155 ;;		_convierte
   156 ;; This function is called by:
   157 ;;		Startup code after reset
   158 ;; This function uses a non-reentrant model
   159 ;;
   160                           
   161                           	psect	text0
   162  007EFC                     __ptext0:
   163                           	callstack 0
   164  007EFC                     _main:
   165                           	callstack 30
   166  007EFC                     
   167                           ;ejemplo3.c: 44:     configuracion();
   168  007EFC  EC58  F03F         	call	_configuracion	;wreg free
   169  007F00                     
   170                           ;ejemplo3.c: 45:     _delay((unsigned long)((1)*(1000000/4000.0)));
   171  007F00  0E53               	movlw	83
   172  007F02                     u157:
   173  007F02  2EE8               	decfsz	wreg,f,c
   174  007F04  D7FE               	bra	u157
   175  007F06  F000               	nop	
   176  007F08                     l835:
   177                           
   178                           ;ejemplo3.c: 49:         LATB = convierte()/4;
   179  007F08  EC68  F03F         	call	_convierte	;wreg free
   180  007F0C  C001  F007         	movff	?_convierte,___awdiv@dividend
   181  007F10  C002  F008         	movff	?_convierte+1,___awdiv@dividend+1
   182  007F14  0E00               	movlw	0
   183  007F16  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   184  007F18  0E04               	movlw	4
   185  007F1A  6E09               	movwf	___awdiv@divisor^0,c
   186  007F1C  EC9E  F03F         	call	___awdiv	;wreg free
   187  007F20  5007               	movf	?___awdiv^0,w,c
   188  007F22  6E8A               	movwf	138,c	;volatile
   189  007F24                     
   190                           ;ejemplo3.c: 50:         _delay((unsigned long)((50)*(1000000/4000.0)));
   191  007F24  0E11               	movlw	17
   192  007F26  6E0F               	movwf	??_main^0,c
   193  007F28  0E3A               	movlw	58
   194  007F2A                     u167:
   195  007F2A  2EE8               	decfsz	wreg,f,c
   196  007F2C  D7FE               	bra	u167
   197  007F2E  2E0F               	decfsz	??_main^0,f,c
   198  007F30  D7FC               	bra	u167
   199  007F32  D000               	nop2	
   200  007F34  EF84  F03F         	goto	l835
   201  007F38  EF00  F000         	goto	start
   202  007F3C                     __end_of_main:
   203                           	callstack 0
   204                           
   205 ;; *************** function _convierte *****************
   206 ;; Defined at:
   207 ;;		line 33 in file "ejemplo3.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;		None
   210 ;; Auto vars:     Size  Location     Type
   211 ;;  resultado       2    4[COMRAM] int 
   212 ;; Return value:  Size  Location     Type
   213 ;;                  2    0[COMRAM] int 
   214 ;; Registers used:
   215 ;;		wreg, status,2, status,0
   216 ;; Tracked objects:
   217 ;;		On entry : 0/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   221 ;;      Params:         2       0       0       0       0       0       0       0       0
   222 ;;      Locals:         2       0       0       0       0       0       0       0       0
   223 ;;      Temps:          2       0       0       0       0       0       0       0       0
   224 ;;      Totals:         6       0       0       0       0       0       0       0       0
   225 ;;Total ram usage:        6 bytes
   226 ;; Hardware stack levels used: 1
   227 ;; This function calls:
   228 ;;		Nothing
   229 ;; This function is called by:
   230 ;;		_main
   231 ;; This function uses a non-reentrant model
   232 ;;
   233                           
   234                           	psect	text1
   235  007ED0                     __ptext1:
   236                           	callstack 0
   237  007ED0                     _convierte:
   238                           	callstack 30
   239  007ED0                     
   240                           ;ejemplo3.c: 34:     int resultado;;ejemplo3.c: 35:     ADCON0bits.GO = 1;
   241  007ED0  82C2               	bsf	194,1,c	;volatile
   242  007ED2                     l30:
   243  007ED2  B2C2               	btfsc	194,1,c	;volatile
   244  007ED4  EF6E  F03F         	goto	u81
   245  007ED8  EF70  F03F         	goto	u80
   246  007EDC                     u81:
   247  007EDC  EF69  F03F         	goto	l30
   248  007EE0                     u80:
   249  007EE0                     
   250                           ;ejemplo3.c: 37:     resultado = ADRESL + ADRESH*256;
   251  007EE0  50C4               	movf	196,w,c	;volatile
   252  007EE2  6E04               	movwf	(??_convierte+1)^0,c
   253  007EE4  6A03               	clrf	??_convierte^0,c
   254  007EE6  50C3               	movf	195,w,c	;volatile
   255  007EE8  2403               	addwf	??_convierte^0,w,c
   256  007EEA  6E05               	movwf	convierte@resultado^0,c
   257  007EEC  0E00               	movlw	0
   258  007EEE  2004               	addwfc	(??_convierte+1)^0,w,c
   259  007EF0  6E06               	movwf	(convierte@resultado+1)^0,c
   260  007EF2                     
   261                           ;ejemplo3.c: 38:     return resultado;
   262  007EF2  C005  F001         	movff	convierte@resultado,?_convierte
   263  007EF6  C006  F002         	movff	convierte@resultado+1,?_convierte+1
   264  007EFA  0012               	return		;funcret
   265  007EFC                     __end_of_convierte:
   266                           	callstack 0
   267                           
   268 ;; *************** function _configuracion *****************
   269 ;; Defined at:
   270 ;;		line 19 in file "ejemplo3.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   284 ;;      Params:         0       0       0       0       0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0       0       0       0       0
   286 ;;      Temps:          0       0       0       0       0       0       0       0       0
   287 ;;      Totals:         0       0       0       0       0       0       0       0       0
   288 ;;Total ram usage:        0 bytes
   289 ;; Hardware stack levels used: 1
   290 ;; This function calls:
   291 ;;		Nothing
   292 ;; This function is called by:
   293 ;;		_main
   294 ;; This function uses a non-reentrant model
   295 ;;
   296                           
   297                           	psect	text2
   298  007EB0                     __ptext2:
   299                           	callstack 0
   300  007EB0                     _configuracion:
   301                           	callstack 30
   302  007EB0                     
   303                           ;ejemplo3.c: 20:     TRISA = 0b00000000;
   304  007EB0  0E00               	movlw	0
   305  007EB2  6E92               	movwf	146,c	;volatile
   306                           
   307                           ;ejemplo3.c: 21:     ANSELA = 0b00000001;
   308  007EB4  0E01               	movlw	1
   309  007EB6  010F               	movlb	15	; () banked
   310  007EB8  6F5B               	movwf	91,b	;volatile
   311                           
   312                           ;ejemplo3.c: 22:     TRISB =0;
   313  007EBA  0E00               	movlw	0
   314  007EBC  6E93               	movwf	147,c	;volatile
   315                           
   316                           ;ejemplo3.c: 23:     ANSELB =0;
   317  007EBE  0E00               	movlw	0
   318  007EC0  6F5C               	movwf	92,b	;volatile
   319                           
   320                           ;ejemplo3.c: 24:     ADCON0 = 0b00000001;
   321  007EC2  0E01               	movlw	1
   322  007EC4  6EC2               	movwf	194,c	;volatile
   323                           
   324                           ;ejemplo3.c: 25:     ADCON1 = 0b00000000;
   325  007EC6  0E00               	movlw	0
   326  007EC8  6EC1               	movwf	193,c	;volatile
   327                           
   328                           ;ejemplo3.c: 26:     ADCON2 = 0b10010000;
   329  007ECA  0E90               	movlw	144
   330  007ECC  6EC0               	movwf	192,c	;volatile
   331  007ECE                     
   332                           ; BSR set to: 15
   333  007ECE  0012               	return		;funcret
   334  007ED0                     __end_of_configuracion:
   335                           	callstack 0
   336                           
   337 ;; *************** function ___awdiv *****************
   338 ;; Defined at:
   339 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;  dividend        2    6[COMRAM] int 
   342 ;;  divisor         2    8[COMRAM] int 
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  quotient        2   12[COMRAM] int 
   345 ;;  sign            1   11[COMRAM] unsigned char 
   346 ;;  counter         1   10[COMRAM] unsigned char 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  2    6[COMRAM] int 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0
   351 ;; Tracked objects:
   352 ;;		On entry : 0/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   356 ;;      Params:         4       0       0       0       0       0       0       0       0
   357 ;;      Locals:         4       0       0       0       0       0       0       0       0
   358 ;;      Temps:          0       0       0       0       0       0       0       0       0
   359 ;;      Totals:         8       0       0       0       0       0       0       0       0
   360 ;;Total ram usage:        8 bytes
   361 ;; Hardware stack levels used: 1
   362 ;; This function calls:
   363 ;;		Nothing
   364 ;; This function is called by:
   365 ;;		_main
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text3
   370  007F3C                     __ptext3:
   371                           	callstack 0
   372  007F3C                     ___awdiv:
   373                           	callstack 30
   374  007F3C  0E00               	movlw	0
   375  007F3E  6E0C               	movwf	___awdiv@sign^0,c
   376  007F40  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   377  007F42  EFA7  F03F         	goto	u90
   378  007F46  EFA5  F03F         	goto	u91
   379  007F4A                     u91:
   380  007F4A  EFAD  F03F         	goto	l795
   381  007F4E                     u90:
   382  007F4E  6C09               	negf	___awdiv@divisor^0,c
   383  007F50  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   384  007F52  B0D8               	btfsc	status,0,c
   385  007F54  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   386  007F56  0E01               	movlw	1
   387  007F58  6E0C               	movwf	___awdiv@sign^0,c
   388  007F5A                     l795:
   389  007F5A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   390  007F5C  EFB4  F03F         	goto	u100
   391  007F60  EFB2  F03F         	goto	u101
   392  007F64                     u101:
   393  007F64  EFBA  F03F         	goto	l801
   394  007F68                     u100:
   395  007F68  6C07               	negf	___awdiv@dividend^0,c
   396  007F6A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   397  007F6C  B0D8               	btfsc	status,0,c
   398  007F6E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   399  007F70  0E01               	movlw	1
   400  007F72  1A0C               	xorwf	___awdiv@sign^0,f,c
   401  007F74                     l801:
   402  007F74  0E00               	movlw	0
   403  007F76  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   404  007F78  0E00               	movlw	0
   405  007F7A  6E0D               	movwf	___awdiv@quotient^0,c
   406  007F7C  5009               	movf	___awdiv@divisor^0,w,c
   407  007F7E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   408  007F80  B4D8               	btfsc	status,2,c
   409  007F82  EFC5  F03F         	goto	u111
   410  007F86  EFC7  F03F         	goto	u110
   411  007F8A                     u111:
   412  007F8A  EFEF  F03F         	goto	l823
   413  007F8E                     u110:
   414  007F8E  0E01               	movlw	1
   415  007F90  6E0B               	movwf	___awdiv@counter^0,c
   416  007F92  EFCF  F03F         	goto	l809
   417  007F96                     l807:
   418  007F96  90D8               	bcf	status,0,c
   419  007F98  3609               	rlcf	___awdiv@divisor^0,f,c
   420  007F9A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   421  007F9C  2A0B               	incf	___awdiv@counter^0,f,c
   422  007F9E                     l809:
   423  007F9E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   424  007FA0  EFD4  F03F         	goto	u121
   425  007FA4  EFD6  F03F         	goto	u120
   426  007FA8                     u121:
   427  007FA8  EFCB  F03F         	goto	l807
   428  007FAC                     u120:
   429  007FAC                     l811:
   430  007FAC  90D8               	bcf	status,0,c
   431  007FAE  360D               	rlcf	___awdiv@quotient^0,f,c
   432  007FB0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   433  007FB2  5009               	movf	___awdiv@divisor^0,w,c
   434  007FB4  5C07               	subwf	___awdiv@dividend^0,w,c
   435  007FB6  500A               	movf	(___awdiv@divisor+1)^0,w,c
   436  007FB8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   437  007FBA  A0D8               	btfss	status,0,c
   438  007FBC  EFE2  F03F         	goto	u131
   439  007FC0  EFE4  F03F         	goto	u130
   440  007FC4                     u131:
   441  007FC4  EFE9  F03F         	goto	l819
   442  007FC8                     u130:
   443  007FC8  5009               	movf	___awdiv@divisor^0,w,c
   444  007FCA  5E07               	subwf	___awdiv@dividend^0,f,c
   445  007FCC  500A               	movf	(___awdiv@divisor+1)^0,w,c
   446  007FCE  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
   447  007FD0  800D               	bsf	___awdiv@quotient^0,0,c
   448  007FD2                     l819:
   449  007FD2  90D8               	bcf	status,0,c
   450  007FD4  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
   451  007FD6  3209               	rrcf	___awdiv@divisor^0,f,c
   452  007FD8  2E0B               	decfsz	___awdiv@counter^0,f,c
   453  007FDA  EFD6  F03F         	goto	l811
   454  007FDE                     l823:
   455  007FDE  500C               	movf	___awdiv@sign^0,w,c
   456  007FE0  B4D8               	btfsc	status,2,c
   457  007FE2  EFF5  F03F         	goto	u141
   458  007FE6  EFF7  F03F         	goto	u140
   459  007FEA                     u141:
   460  007FEA  EFFB  F03F         	goto	l827
   461  007FEE                     u140:
   462  007FEE  6C0D               	negf	___awdiv@quotient^0,c
   463  007FF0  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
   464  007FF2  B0D8               	btfsc	status,0,c
   465  007FF4  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
   466  007FF6                     l827:
   467  007FF6  C00D  F007         	movff	___awdiv@quotient,?___awdiv
   468  007FFA  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
   469  007FFE  0012               	return		;funcret
   470  008000                     __end_of___awdiv:
   471                           	callstack 0
   472  0000                     
   473                           	psect	rparam
   474  0000                     
   475                           	psect	idloc
   476                           
   477                           ;Config register IDLOC0 @ 0x200000
   478                           ;	unspecified, using default values
   479  200000                     	org	2097152
   480  200000  FF                 	db	255
   481                           
   482                           ;Config register IDLOC1 @ 0x200001
   483                           ;	unspecified, using default values
   484  200001                     	org	2097153
   485  200001  FF                 	db	255
   486                           
   487                           ;Config register IDLOC2 @ 0x200002
   488                           ;	unspecified, using default values
   489  200002                     	org	2097154
   490  200002  FF                 	db	255
   491                           
   492                           ;Config register IDLOC3 @ 0x200003
   493                           ;	unspecified, using default values
   494  200003                     	org	2097155
   495  200003  FF                 	db	255
   496                           
   497                           ;Config register IDLOC4 @ 0x200004
   498                           ;	unspecified, using default values
   499  200004                     	org	2097156
   500  200004  FF                 	db	255
   501                           
   502                           ;Config register IDLOC5 @ 0x200005
   503                           ;	unspecified, using default values
   504  200005                     	org	2097157
   505  200005  FF                 	db	255
   506                           
   507                           ;Config register IDLOC6 @ 0x200006
   508                           ;	unspecified, using default values
   509  200006                     	org	2097158
   510  200006  FF                 	db	255
   511                           
   512                           ;Config register IDLOC7 @ 0x200007
   513                           ;	unspecified, using default values
   514  200007                     	org	2097159
   515  200007  FF                 	db	255
   516                           
   517                           	psect	config
   518                           
   519                           ;Config register CONFIG1L @ 0x300000
   520                           ;	unspecified, using default values
   521                           ;	PLL Selection
   522                           ;	PLLSEL = 0x0, unprogrammed default
   523                           ;	PLL Enable Configuration bit
   524                           ;	CFGPLLEN = 0x0, unprogrammed default
   525                           ;	CPU System Clock Postscaler
   526                           ;	CPUDIV = 0x0, unprogrammed default
   527                           ;	Low Speed USB mode with 48 MHz system clock
   528                           ;	LS48MHZ = 0x0, unprogrammed default
   529  300000                     	org	3145728
   530  300000  00                 	db	0
   531                           
   532                           ;Config register CONFIG1H @ 0x300001
   533                           ;	Oscillator Selection
   534                           ;	FOSC = INTOSCIO, Internal oscillator
   535                           ;	Primary Oscillator Shutdown
   536                           ;	PCLKEN = 0x1, unprogrammed default
   537                           ;	Fail-Safe Clock Monitor
   538                           ;	FCMEN = 0x0, unprogrammed default
   539                           ;	Internal/External Oscillator Switchover
   540                           ;	IESO = 0x0, unprogrammed default
   541  300001                     	org	3145729
   542  300001  28                 	db	40
   543                           
   544                           ;Config register CONFIG2L @ 0x300002
   545                           ;	unspecified, using default values
   546                           ;	Power-up Timer Enable
   547                           ;	nPWRTEN = 0x1, unprogrammed default
   548                           ;	Brown-out Reset Enable
   549                           ;	BOREN = 0x3, unprogrammed default
   550                           ;	Brown-out Reset Voltage
   551                           ;	BORV = 0x3, unprogrammed default
   552                           ;	Low-Power Brown-out Reset
   553                           ;	nLPBOR = 0x1, unprogrammed default
   554  300002                     	org	3145730
   555  300002  5F                 	db	95
   556                           
   557                           ;Config register CONFIG2H @ 0x300003
   558                           ;	Watchdog Timer Enable bits
   559                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   560                           ;	Watchdog Timer Postscaler
   561                           ;	WDTPS = 0xF, unprogrammed default
   562  300003                     	org	3145731
   563  300003  3C                 	db	60
   564                           
   565                           ; Padding undefined space
   566  300004                     	org	3145732
   567  300004  FF                 	db	255
   568                           
   569                           ;Config register CONFIG3H @ 0x300005
   570                           ;	CCP2 MUX bit
   571                           ;	CCP2MX = 0x1, unprogrammed default
   572                           ;	PORTB A/D Enable bit
   573                           ;	PBADEN = 0x1, unprogrammed default
   574                           ;	Timer3 Clock Input MUX bit
   575                           ;	T3CMX = 0x1, unprogrammed default
   576                           ;	SDO Output MUX bit
   577                           ;	SDOMX = 0x1, unprogrammed default
   578                           ;	Master Clear Reset Pin Enable
   579                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   580  300005                     	org	3145733
   581  300005  D3                 	db	211
   582                           
   583                           ;Config register CONFIG4L @ 0x300006
   584                           ;	Stack Full/Underflow Reset
   585                           ;	STVREN = 0x1, unprogrammed default
   586                           ;	Single-Supply ICSP Enable bit
   587                           ;	LVP = OFF, Single-Supply ICSP disabled
   588                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   589                           ;	ICPRT = OFF, ICPORT disabled
   590                           ;	Extended Instruction Set Enable bit
   591                           ;	XINST = 0x0, unprogrammed default
   592                           ;	Background Debugger Enable bit
   593                           ;	DEBUG = 0x1, unprogrammed default
   594  300006                     	org	3145734
   595  300006  81                 	db	129
   596                           
   597                           ; Padding undefined space
   598  300007                     	org	3145735
   599  300007  FF                 	db	255
   600                           
   601                           ;Config register CONFIG5L @ 0x300008
   602                           ;	unspecified, using default values
   603                           ;	Block 0 Code Protect
   604                           ;	CP0 = 0x1, unprogrammed default
   605                           ;	Block 1 Code Protect
   606                           ;	CP1 = 0x1, unprogrammed default
   607                           ;	Block 2 Code Protect
   608                           ;	CP2 = 0x1, unprogrammed default
   609                           ;	Block 3 Code Protect
   610                           ;	CP3 = 0x1, unprogrammed default
   611  300008                     	org	3145736
   612  300008  0F                 	db	15
   613                           
   614                           ;Config register CONFIG5H @ 0x300009
   615                           ;	unspecified, using default values
   616                           ;	Boot Block Code Protect
   617                           ;	CPB = 0x1, unprogrammed default
   618                           ;	Data EEPROM Code Protect
   619                           ;	CPD = 0x1, unprogrammed default
   620  300009                     	org	3145737
   621  300009  C0                 	db	192
   622                           
   623                           ;Config register CONFIG6L @ 0x30000A
   624                           ;	unspecified, using default values
   625                           ;	Block 0 Write Protect
   626                           ;	WRT0 = 0x1, unprogrammed default
   627                           ;	Block 1 Write Protect
   628                           ;	WRT1 = 0x1, unprogrammed default
   629                           ;	Block 2 Write Protect
   630                           ;	WRT2 = 0x1, unprogrammed default
   631                           ;	Block 3 Write Protect
   632                           ;	WRT3 = 0x1, unprogrammed default
   633  30000A                     	org	3145738
   634  30000A  0F                 	db	15
   635                           
   636                           ;Config register CONFIG6H @ 0x30000B
   637                           ;	unspecified, using default values
   638                           ;	Configuration Registers Write Protect
   639                           ;	WRTC = 0x1, unprogrammed default
   640                           ;	Boot Block Write Protect
   641                           ;	WRTB = 0x1, unprogrammed default
   642                           ;	Data EEPROM Write Protect
   643                           ;	WRTD = 0x1, unprogrammed default
   644  30000B                     	org	3145739
   645  30000B  E0                 	db	224
   646                           
   647                           ;Config register CONFIG7L @ 0x30000C
   648                           ;	unspecified, using default values
   649                           ;	Block 0 Table Read Protect
   650                           ;	EBTR0 = 0x1, unprogrammed default
   651                           ;	Block 1 Table Read Protect
   652                           ;	EBTR1 = 0x1, unprogrammed default
   653                           ;	Block 2 Table Read Protect
   654                           ;	EBTR2 = 0x1, unprogrammed default
   655                           ;	Block 3 Table Read Protect
   656                           ;	EBTR3 = 0x1, unprogrammed default
   657  30000C                     	org	3145740
   658  30000C  0F                 	db	15
   659                           
   660                           ;Config register CONFIG7H @ 0x30000D
   661                           ;	unspecified, using default values
   662                           ;	Boot Block Table Read Protect
   663                           ;	EBTRB = 0x1, unprogrammed default
   664  30000D                     	org	3145741
   665  30000D  40                 	db	64
   666                           tosu	equ	0xFFF
   667                           tosh	equ	0xFFE
   668                           tosl	equ	0xFFD
   669                           stkptr	equ	0xFFC
   670                           pclatu	equ	0xFFB
   671                           pclath	equ	0xFFA
   672                           pcl	equ	0xFF9
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           prodh	equ	0xFF4
   678                           prodl	equ	0xFF3
   679                           indf0	equ	0xFEF
   680                           postinc0	equ	0xFEE
   681                           postdec0	equ	0xFED
   682                           preinc0	equ	0xFEC
   683                           plusw0	equ	0xFEB
   684                           fsr0h	equ	0xFEA
   685                           fsr0l	equ	0xFE9
   686                           wreg	equ	0xFE8
   687                           indf1	equ	0xFE7
   688                           postinc1	equ	0xFE6
   689                           postdec1	equ	0xFE5
   690                           preinc1	equ	0xFE4
   691                           plusw1	equ	0xFE3
   692                           fsr1h	equ	0xFE2
   693                           fsr1l	equ	0xFE1
   694                           bsr	equ	0xFE0
   695                           indf2	equ	0xFDF
   696                           postinc2	equ	0xFDE
   697                           postdec2	equ	0xFDD
   698                           preinc2	equ	0xFDC
   699                           plusw2	equ	0xFDB
   700                           fsr2h	equ	0xFDA
   701                           fsr2l	equ	0xFD9
   702                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv
    ___awdiv->_convierte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     475
                                             14 COMRAM     1     1      0
                            ___awdiv
                      _configuracion
                          _convierte
 ---------------------------------------------------------------------------------
 (1) _convierte                                            6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              6 COMRAM     8     4      4
                          _convierte (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     _convierte (ARG)
   _configuracion
   _convierte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F       F       1       15.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 30 08:47:02 2021

                     l30 7ED2                       l33 7EFA                       l27 7ECE  
                     u80 7EE0                       u81 7EDC                       u90 7F4E  
                     u91 7F4A             ___awdiv@sign 000C           ?_configuracion 0001  
                    l275 7FFE                      l801 7F74                      l811 7FAC  
                    l803 7F7C                      l821 7FD8                      l813 7FB2  
                    l805 7F8E                      l717 7EB0                      l815 7FC8  
                    l807 7F96                      l823 7FDE                      l831 7EFC  
                    l825 7FEE                      l817 7FD0                      l809 7F9E  
                    l833 7F00                      l827 7FF6                      l819 7FD2  
                    l835 7F08                      l781 7EE0                      l837 7F24  
                    l791 7F4E                      l783 7EF2                      l793 7F56  
                    l795 7F5A                      l787 7F3C                      l779 7ED0  
                    l797 7F68                      l789 7F40                      l799 7F70  
                    u100 7F68                      u101 7F64                      u110 7F8E  
                    u111 7F8A                      u120 7FAC                      u121 7FA8  
                    u130 7FC8                      u131 7FC4                      u140 7FEE  
                    u141 7FEA                      u157 7F02                      u167 7F2A  
                    wreg 000FE8                     _LATB 000F8A                     _main 7EFC  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 8000          ___awdiv@divisor 0009          ___awdiv@counter 000B  
                  _TRISA 000F92                    _TRISB 000F93                    status 000FD8  
        __initialization 7EAA             __end_of_main 7F3C          ??_configuracion 0001  
                 ??_main 000F            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0007                   _ANSELA 000F5B  
                 _ANSELB 000F5C                ??___awdiv 000B         ___awdiv@quotient 000D  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7EAA  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __size_of_convierte 002C  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7F3C  
      __end_of_convierte 7EFC                  __pcinit 7EAA                  __ramtop 0800  
                __ptext0 7EFC                  __ptext1 7ED0                  __ptext2 7EB0  
                __ptext3 7F3C     end_of_initialization 7EAA    __end_of_configuracion 7ED0  
     convierte@resultado 0005      start_initialization 7EAA                 ?___awdiv 0007  
              _convierte 7ED0               _ADCON0bits 000FC2               ?_convierte 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00C4  
 __size_of_configuracion 0020            __size_of_main 0040                 isa$xinst 000000  
            ??_convierte 0003            _configuracion 7EB0  
